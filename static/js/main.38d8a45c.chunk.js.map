{"version":3,"sources":["consts/consts.ts","stores/TrackerStore.js","components/EnergyMap/USMap.js","components/CounterfactualAlert/CounterfactualAlert.js","components/HardwareComponents/HardwareItem.js","components/HardwareComponents/HardwareAutoComplete.js","components/HardwareComponents/HardwareView.js","components/ExplainableEquation/ExplainableEquation.js","components/DataSourceView/DataSourceView.js","utils/jointMap.js","components/TrackerGraphs/SampleGraph.js","utils/regression.js","components/TrackerPage/TrackerPage.js","components/NavTabs/NavTabs.js","App.js","serviceWorker.js","index.js"],"names":["SERVER_URI","window","location","href","includes","MODEL_DATA","name","author","components","serverData","PUE","copyObject","object","JSON","parse","stringify","startComponents","startState","startPUE","makeObservable","this","getInitialState","setModelSource","initialComponents","initialState","initialPUE","counterfactualMode","counterfactualAlert","alternativeModelIdx","hoveredState","modelIdx","newIdx","Number","isFinite","modelData","resetTracker","promptAlternativeMode","newState","newPUE","type","component","val","newProfile","push","mode","dataMode","fetch","then","response","json","data","runInAction","liveData","observable","action","USMap","observer","drawMap","d3","selectAll","remove","width","document","getElementById","offsetWidth","_this","projection","geoAlbersUsa","translate","height","scale","path","geoPath","svg","select","append","attr","handleClick","d","i","TrackerStore","style","state","clicked","setState","raise","initialStateSVG","handleMouseOver","setHoveredState","handleMouseOut","filter","local","dataArray","k","NRELData","parseFloat","minVal","min","maxVal","max","ramp","scaleLinear","domain","range","dataState","dataValue","j","features","length","properties","value","enter","on","h","key","legend","y","yAxis","axisRight","call","addEventListener","resizeUpdate","bind","reaction","newMode","newAlert","prevAlert","selectedState","removeEventListener","Grid","container","item","sm","Typography","paddingTop","paddingLeft","variant","gutterBottom","fontSize","fontWeight","Divider","float","paddingRight","toFixed","color","FormLabel","id","React","PureComponent","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","enterAlternativeMode","Alert","marginTop","marginBottom","severity","HardwareItem","ListItem","ListItemAvatar","Avatar","props","hardwareType","ListItemText","primary","hardwareName","secondary","Fragment","original","quantity","ListItemSecondaryAction","IconButton","updateQuantityHandler","edge","aria-label","Component","HardwareAutoComplete","useState","setValue","xs","Autocomplete","options","top100Films","onChange","event","getOptionLabel","option","title","renderInput","params","TextField","label","margin","renderOption","inputValue","matches","match","parts","map","part","index","highlight","text","addHardware","Object","keys","efficiencyMap","curr","jointMap","alternative","joint","allKeys","setA","setB","_union","Set","elem","add","union","HardwareView","cpuMap","gpuMap","List","dense","updateHardware","paddingBottom","upDownStyles","display","lineHeight","verticalAlign","colors","ExplainableEquation","button","String","raw","Collapse","in","timeout","unmountOnExit","disablePadding","setPUE","padding","contentEditable","StyledToggleButtonGroup","withStyles","theme","grouped","borderRadius","shape","ToggleButtonGroup","getButtonStyling","idx","alternativeIdx","textTransform","textAlign","backgroundColor","border","DataSourceView","nextView","setTrackerMode","justify","spacing","size","exclusive","newPaper","ToggleButton","onContextMenu","e","preventDefault","setAlternativeModel","marginRight","marginLeft","startIcon","accept","fileReader","FileReader","readAsText","target","files","onload","loadedProfile","result","addModelProfile","htmlFor","handleChange","co2Converter","co2Factor","graphType","kwh","x","cumulativeMap","start","cumulative","sum","harmonicMean","ns","reduce","invSum","n","sumDatasetEnergy","graphKey","gpuRescale","mappedCpu","num","extrapolator","extrapolation","regression","lr","sum_x","sum_y","sum_xy","sum_xx","sum_yy","slope","Math","pow","sqrt","linearRegression","extrapolated_data","SampleGraph","fetchGraphData","updateLiveData","setTimeout","catch","handleGraphChange","handleIntervalChange","intervalType","handleCumulativeSwitch","checked","newPlacement","anchorEl","currentTarget","placement","sliderMax","sliderVal","updateInterval","clearInterval","originals","alternatives","forEach","componentObj","dataScaffold","emptyGraph","originalCo2Converter","plotAlternatives","alternativeConverter","labels","interval","arr","labelGenerator","originalSummedEnergy","alternativeSummedEnergy","datasets","fill","borderColor","pointRadius","yAxisID","borderDash","scales","yAxes","position","scaleLabel","labelString","xAxes","chart","getDataScaffold","Popper","transition","TransitionProps","Fade","Paper","alignItems","Switch","TrackerPage","CounterfactualAlert","className","useStyles","makeStyles","root","flexGrow","palette","background","paper","NavTabs","classes","AppBar","boxShadow","Toolbar","minHeight","letterSpacing","App","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.38d8a45c.chunk.js","sourcesContent":["export const SERVER_URI = window.location.href.includes(\"localhost\") ? \"http://localhost:5000/\" : \"/\"\n\nexport const MODEL_DATA = [\n  {\n    name: 'Transfomer',\n    author: 'Vaswani et al. 2017',\n    components: {\n      \"cpu\": {\n        \"Intel i7 2600K\": 1\n      },\n      \"gpu\": {\n        \"geforce-gtx-1080-ti\": 4\n      }\n    },\n    serverData: {\n      \"cpu\": { \n        \"epoch\" : [.05, .05, .05, .05, .05, .05]\n      },\n      \"gpu\": {\n        \"epoch\": [.05, .05, .05, .05, .05, .05]\n      } \n    },\n    location: \"Georgia\",\n    PUE: 1.59\n  },\n  {\n    name: 'BERT',\n    author: 'Devlin et al. 2018',\n    components: {\n      \"cpu\": {\n        \"Intel i7 2600K\": 2\n      },\n      \"gpu\": {\n        \"geforce-rtx-2080-ti\": 8\n      }\n    },\n    serverData: {\n      \"cpu\": { \n        \"epoch\" : [.1, .1, .1, .1, .1, .1]\n      },\n      \"gpu\": {\n        \"epoch\": [.1, .1, .1, .1, .1, .1]\n      } \n    },\n    location: \"Wyoming\",\n    PUE: 1.59\n  }\n]\n","import { observable, action, makeObservable, runInAction } from 'mobx';\nimport { SERVER_URI, MODEL_DATA } from '../consts/consts'\n\nconst copyObject = (object) => {\n  return JSON.parse(JSON.stringify(object));\n}\n\nexport class TrackerStore {\n  @observable counterfactualMode = false;\n  @observable counterfactualAlert = false;\n  @observable initialComponents = {\n    \"gpu\" : {},\n    \"cpu\" : {}\n  };\n  @observable initialState = \"Georgia\"\n  @observable initialPUE = 1.59\n  @observable hoveredState = null;\n  // @observable clickedState = \"Georgia\"\n  @observable modelIdx = 0;\n  @observable alternativeModelIdx = null;\n  @observable modelData = MODEL_DATA\n  @observable dataMode = 'loaded';\n\n  @observable liveData = {\n    \"cpu\":{\n      \"epoch\":[]\n    },\n    \"gpu\":{\n      \"epoch\":[]\n    }\n  }\n\n  startComponents = {\n    \"gpu\" : {},\n    \"cpu\" : {}\n  };\n\n  startState = \"Georgia\";\n  startPUE = 1.59;\n\n  constructor() {\n    makeObservable(this);\n    this.getInitialState();\n  }\n\n  async getInitialState () {\n    // this.resetTracker();\n    this.setModelSource(0)\n  }\n\n  @action resetTracker () {\n    this.initialComponents = copyObject(this.startComponents);\n    this.initialState = this.startState;\n    this.initialPUE = this.startPUE\n    this.counterfactualMode = false;\n    this.counterfactualAlert = false;\n    this.alternativeModelIdx = null\n    this.hoveredState = null\n    this.modelIdx = null;\n  }\n\n  // data source actions\n  @action setModelSource (newIdx) {\n\n    if (newIdx == null) {\n      this.resetTracker();\n      return\n    }\n\n    this.modelIdx = newIdx\n    this.initialComponents = Number.isFinite(this.modelIdx) ?\n      this.modelData[this.modelIdx][\"components\"] : copyObject(this.startComponents)\n    this.startComponents = copyObject(this.initialComponents)\n    this.alternativeModelIdx = null\n    this.hoveredState = null\n    if (Number.isFinite(this.modelIdx)) {\n      this.initialState = this.modelData[newIdx].location\n      this.initialPUE = this.startPUE = this.modelData[newIdx].PUE\n    }\n  }\n\n  @action setAlternativeModel (newIdx) {\n\n    // can't set the selected model as the alternative\n    // can't set an alternative when nothing is selected\n    if (this.modelIdx == newIdx || !Number.isFinite(this.modelIdx)) return;\n\n    if (this.alternativeModelIdx == newIdx) {\n      this.resetTracker();\n      return\n    }\n\n    this.alternativeModelIdx = newIdx\n    this.hoveredState = this.modelData[newIdx].location\n    this.initialComponents = Number.isFinite(this.alternativeModelIdx) ?\n      this.modelData[this.alternativeModelIdx][\"components\"] : copyObject(this.startComponents)\n      \n    if (!this.counterfactualMode) this.promptAlternativeMode()\n  }\n\n  // alternative mode actions\n\n  @action promptAlternativeMode () {\n    this.counterfactualAlert = true;\n  }\n\n  @action enterAlternativeMode () {\n    this.counterfactualAlert = false;\n    this.counterfactualMode = true;\n  }\n\n  // map actions\n\n  @action setHoveredState (newState) {\n    this.hoveredState = newState\n    if (newState == null && this.alternativeModelIdx) {\n      this.hoveredState = this.modelData[this.alternativeModelIdx].location\n    }\n  }\n\n  // hardware actions\n\n  @action setPUE (newPUE) {\n    this.initialPUE = newPUE\n    if (!this.counterfactualMode) this.promptAlternativeMode()\n  }\n\n  @action updateHardware (type, component, val) {\n    // props.updateQuantityHandler(\"gpu\", component, val)\n    this.initialComponents[type][component] = val\n    if (!this.counterfactualMode) this.promptAlternativeMode()\n    // recompute efficiency scalar\n  }\n\n  @action addHardware (type, component) {\n    this.initialComponents[type][component] = 1\n    if (!this.counterfactualMode) this.promptAlternativeMode()\n  }\n\n  @action addModelProfile (newProfile) {\n    this.modelData.push(newProfile)\n  }\n\n  @action setTrackerMode (mode) {\n    this.dataMode = mode;\n    if (this.dataMode == \"link\") {\n      fetch(SERVER_URI + \"initial-setup\").then((response) => response.json())\n        .then((data) => {\n          // bit hacky, find a better way to deepclone so the states aren't the same...\n          runInAction(() => {\n            this.startComponents = copyObject(data[\"component_names\"])\n            this.initialComponents = copyObject(data[\"component_names\"])\n\n            this.startState = copyObject(data[\"state\"])\n            this.initialState = copyObject(data[\"state\"])\n\n            this.counterfactualMode = copyObject(data[\"paused\"])\n          })\n      })\n    }\n  }\n\n  @action updateLiveData (data) {\n    this.liveData = data;\n  }\n\n}\n\nexport default new TrackerStore();\n","import React from 'react';\n/*global d3*/\nimport './USMap.css';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport NRELData from '../../NRELData.json'\n\nimport { observer } from \"mobx-react\"\nimport { reaction } from \"mobx\"\nimport TrackerStore from '../../stores/TrackerStore'\n\n@observer\nclass USMap extends React.PureComponent {\n\n  drawMap = (initialState) => {\n\n    //Width and height of map\n    // d3.select('#energymap').selectAll(\"*\").remove();\n\n    d3.selectAll('#energymap > *')\n      .remove();\n\n    var width = document.getElementById(\"energymap\").offsetWidth;\n    \n    var height = 400\n\n    var lowColor = '#f9f9f9'\n    var highColor = '#298A48'\n\n    // good ol' js days\n    var _this = this;\n\n    // D3 Projection\n    var projection = d3.geoAlbersUsa()\n      .translate([width / 2 + 50, height / 2 - 10]) // translate to center of screen\n      .scale([width / 1.2]); // scale things down so see entire US\n\n    // Define path generator\n    var path = d3.geoPath() // path generator that will convert GeoJSON to SVG paths\n      .projection(projection); // tell path generator to use albersUsa projection\n\n    //Create SVG element and append map to the SVG\n    _this.svg = d3.select(\"#energymap\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n\n    // TODO: change all references to point to _this.svg\n    var svg = _this.svg\n\n    function handleClick(d, i) {\n      if (d['properties']['name'] == TrackerStore.initialState) return;\n      svg.selectAll(\"path\")\n        .style(\"stroke\", \"#fff\")\n        .style(\"stroke-dasharray\", \"none\")\n        .style(\"stroke-width\", \"1\")\n\n      if (d[\"properties\"][\"name\"] == _this.state.clicked) {\n        _this.setState({clicked: null})\n      } else {\n        _this.setState({clicked: d[\"properties\"][\"name\"]})\n        if (!TrackerStore.counterfactualMode) TrackerStore.promptAlternativeMode();\n      }\n\n      d3.select(this)\n        .style(\"stroke-width\", \"4\")\n        .style(\"stroke-dasharray\", \"5\")\n        .style(\"stroke\", \"#f5b042\").raise()\n\n      _this.initialStateSVG.style(\"stroke-width\", \"3\")\n        .style(\"stroke\", \"#606060\").raise()\n\n    }\n\n    function handleMouseOver(d, i) {\n      if (d['properties']['name'] == TrackerStore.initialState) return;\n      d3.select(this)\n        .style(\"stroke-width\", \"4\")\n        .style(\"stroke-dasharray\", \"5\")\n        .style(\"stroke\", \"#f5b042\").raise()\n      d3.select(this).style(\"cursor\", \"pointer\");\n      // _this.props.selectedStateHandler(NRELData[d['properties']['name']][\"co2_lb_kwh\"])\n      // _this.setState({selectedState: d['properties']['name']})\n      TrackerStore.setHoveredState(d['properties']['name'])\n      _this.initialStateSVG.style(\"stroke-width\", \"3\")\n        .style(\"stroke\", \"#606060\").raise()\n    }\n\n    function handleMouseOut(d, i) {\n      if (d['properties']['name'] == TrackerStore.initialState) return;\n      d3.select(this)\n        .style(\"stroke-width\", \"1\")\n        .style(\"stroke-dasharray\", \"none\")\n        .style(\"stroke\", \"#fff\")\n\n      if (_this.state.clicked != null) {\n        svg.selectAll(\"path\").filter((d, local) => {\n          return d[\"properties\"][\"name\"] == _this.state.clicked\n        }).style(\"stroke-width\", \"4\")\n          .style(\"stroke-dasharray\", \"5\")\n          .style(\"stroke\", \"#f5b042\").raise()\n\n\n      }\n\n      TrackerStore.setHoveredState(_this.state.clicked)\n      d3.select(this).style(\"cursor\", \"default\");\n      _this.initialStateSVG.style(\"stroke-width\", \"3\")\n        .style(\"stroke\", \"#606060\").raise()\n\n    }\n\n    var dataArray = [];\n    for (var k in NRELData) {\n      dataArray.push(parseFloat(NRELData[k][\"co2_lb_kwh\"]))\n    }\n\n    var minVal = d3.min(dataArray)\n    var maxVal = d3.max(dataArray)\n    var ramp = d3.scaleLinear().domain([minVal,maxVal]).range([lowColor,highColor])\n\n    // Load GeoJSON data and merge with states data\n    d3.json(\"us-states.json\", (json) => {\n\n      // Loop through each state data value in the .csv file\n      for (var dataState in NRELData) {\n\n        // Grab data value\n        var dataValue = NRELData[dataState][\"co2_lb_kwh\"]\n\n        // Find the corresponding state inside the GeoJSON\n        for (var j = 0; j < json.features.length; j++) {\n          var jsonState = json.features[j].properties.name;\n\n          if (dataState == jsonState) {\n\n            // Copy the data value into the JSON\n            json.features[j].properties.value = dataValue;\n\n            // Stop looking through the JSON\n            break;\n          }\n        }\n      }\n\n      // Bind the data to the SVG and create one path per GeoJSON feature\n      svg.selectAll(\"path\")\n        .data(json.features)\n        .enter()\n        .append(\"path\")\n        .attr(\"d\", path)\n        .style(\"stroke\", \"#fff\")\n        .style(\"stroke-width\", \"1\")\n        .style(\"fill\", function(d) { return ramp(d.properties.value) })\n        .on(\"mouseover\", handleMouseOver)\n        .on(\"mouseout\", handleMouseOut)\n        .on(\"click\", handleClick)\n\n\n      _this.initialStateSVG = svg.selectAll(\"path\")\n        .filter((d, local) => {\n          return d[\"properties\"][\"name\"] == TrackerStore.initialState\n        }).style(\"stroke-width\", (d) => {\n          return \"3\"\n        })\n        .style(\"stroke\", \"#606060\").raise()\n\n      if (_this.state.clicked) {\n        _this.svg.selectAll('path')\n          .filter((d, local) => {\n            return d[\"properties\"][\"name\"] == _this.state.clicked\n          })\n          .style(\"stroke-width\", \"4\")\n          .style(\"stroke-dasharray\", \"5\")\n          .style(\"stroke\", \"#f5b042\").raise()\n      }\n\n      // add a legend\n      var w = 70, h = 200;\n      d3.selectAll('#legend').remove();\n      var key = d3.select(\"#energymap\")\n        .append(\"svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .attr(\"id\", \"legend\");\n\n      var legend = key.append(\"defs\")\n        .append(\"svg:linearGradient\")\n        .attr(\"id\", \"gradient\")\n        .attr(\"x1\", \"100%\")\n        .attr(\"y1\", \"0%\")\n        .attr(\"x2\", \"100%\")\n        .attr(\"y2\", \"100%\")\n        .attr(\"spreadMethod\", \"pad\");\n\n      legend.append(\"stop\")\n        .attr(\"offset\", \"0%\")\n        .attr(\"stop-color\", highColor)\n        .attr(\"stop-opacity\", 1);\n\n      legend.append(\"stop\")\n        .attr(\"offset\", \"100%\")\n        .attr(\"stop-color\", lowColor)\n        .attr(\"stop-opacity\", 1);\n\n      key.append(\"rect\")\n        .attr(\"width\", 20)\n        .attr(\"height\", h)\n        .style(\"fill\", \"url(#gradient)\")\n        .attr(\"transform\", \"translate(0,3)\");\n\n      var y = d3.scaleLinear()\n        .range([h, 0])\n        .domain([minVal, maxVal]);\n\n      var yAxis = d3.axisRight(y);\n\n      key.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(21, 3)\")\n        .call(yAxis)\n\n      key.attr(\"height\", h + 20)\n\n    });\n\n\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      clicked: null\n    };\n    this.initialStateSVG = null\n    this.svg = null\n  }\n\n  resizeUpdate() {\n    this.drawMap(TrackerStore.initialState)\n  }\n\n  componentDidMount() {\n    this.drawMap(TrackerStore.initialState)\n    window.addEventListener(\"resize\", this.resizeUpdate.bind(this));\n\n    reaction(\n      () => TrackerStore.initialState,\n      (newState) => {\n        // this.drawMap(newState)\n        this.svg.selectAll(\"path\")\n          .style(\"stroke\", \"#fff\")\n          .style(\"stroke-dasharray\", \"none\")\n          .style(\"stroke-width\", \"1\")\n\n        this.initialStateSVG = this.svg.selectAll(\"path\")\n        .filter((d, local) => {\n          return d[\"properties\"][\"name\"] == newState\n        })\n\n        this.initialStateSVG.style(\"stroke-width\", \"3\")\n          .style(\"stroke\", \"#606060\").raise()\n\n        this.setState({clicked: null})\n      }\n    )\n\n    reaction(\n      () => TrackerStore.alternativeModelIdx,\n      (newIdx) => {\n        // this.drawMap(newState)\n        if (!this.svg) return;\n\n        this.svg.selectAll(\"path\")\n          .filter((d, local) => d[\"properties\"][\"name\"] != TrackerStore.initialState)\n          .style(\"stroke\", \"#fff\")\n          .style(\"stroke-dasharray\", \"none\")\n          .style(\"stroke-width\", \"1\")\n\n        if (!Number.isFinite(newIdx)) return;\n\n        this.svg.selectAll('path')\n          .filter((d, local) => {\n            return d[\"properties\"][\"name\"] == TrackerStore.modelData[newIdx].location\n          })\n          .style(\"stroke-width\", \"4\")\n          .style(\"stroke-dasharray\", \"5\")\n          .style(\"stroke\", \"#f5b042\").raise()\n\n        this.setState({clicked: TrackerStore.modelData[newIdx].location})\n\n      }\n    )\n\n    reaction(\n      () => TrackerStore.counterfactualMode,\n      (newMode) => {\n        if (newMode) return\n        if (this.svg) {\n          this.svg.selectAll(\"path\")\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-dasharray\", \"none\")\n            .style(\"stroke-width\", \"1\")\n        }\n        if (this.initialStateSVG) {\n          this.initialStateSVG\n            .style(\"stroke-width\", \"3\")\n            .style(\"stroke\", \"#606060\").raise()\n        }\n\n        TrackerStore.setHoveredState(null)\n        this.setState({\n          clicked: null,\n        })\n      }\n    )\n\n    reaction(\n      () => TrackerStore.counterfactualAlert,\n      (newAlert, prevAlert) => {\n        // must be in alert state\n        if (!prevAlert) return;\n        // the new alert must be dismissed, and the user must not be in counterfacutal mode\n        if (newAlert || TrackerStore.counterfactualMode) return;\n        if (this.svg) {\n          this.svg.selectAll(\"path\")\n            .filter((d, local) => d[\"properties\"][\"name\"] == this.state.clicked)\n            .style(\"stroke\", \"#fff\")\n            .style(\"stroke-dasharray\", \"none\")\n            .style(\"stroke-width\", \"1\")\n        }\n        if (this.initialStateSVG) {\n          this.initialStateSVG\n            .style(\"stroke-width\", \"3\")\n            .style(\"stroke\", \"#606060\").raise()\n        }\n        TrackerStore.setHoveredState(null)\n        this.setState({\n          clicked: null,\n          selectedState: null,\n        })\n      }\n    )\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeUpdate.bind(this));\n    d3.select('#energymap').selectAll(\"*\").remove();\n  }\n\n  render() {\n    return (<div>\n      <Grid container>\n        <Grid item sm={12}>\n          <Typography style={{paddingTop: '2%', paddingLeft: '16px'}} variant=\"h6\" gutterBottom>\n            Your Region's Energy Intensity <span style={{fontSize: '.9rem', fontWeight: '400'}}>(Lower is Better)</span>\n          </Typography>\n        </Grid>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <Grid style={{paddingTop: '1%'}} container>\n        <Grid item sm={6}>\n        </Grid>\n        <Grid item sm={6}>\n        <div style={{float: \"right\", paddingRight: \"16px\"}}>\n        {TrackerStore.initialState &&\n          (<span style={{fontSize: '17px'}}>\n            <span style={{fontWeight: 'bold'}}>{TrackerStore.initialState} </span>\n            <span>{NRELData[TrackerStore.initialState][\"co2_lb_kwh\"].toFixed(2)}</span>\n            <span style={{color: 'rgba(0, 0, 0, .54)'}}> CO<sub>2</sub> lb / kWh</span>\n          </span>)}\n\n        </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item sm={6}>\n          <FormLabel style={{paddingTop: '1%', paddingLeft: '16px'}} component=\"legend\">CO<sub>2</sub> lb / kWh</FormLabel>\n        </Grid>\n        <Grid item sm={6}>\n        <div style={{float: \"right\", paddingRight: \"16px\"}}>\n          {TrackerStore.hoveredState &&\n            (<span style={{fontSize: '17px'}}>\n              <span style={{fontWeight: 'bold', color: 'rgb(245, 176, 66)'}}>{TrackerStore.hoveredState} </span>\n              <span>{NRELData[TrackerStore.hoveredState][\"co2_lb_kwh\"].toFixed(2)}</span>\n              <span style={{color: 'rgba(0, 0, 0, .54)'}}> CO<sub>2</sub> lb / kWh</span>\n            </span>) }\n        </div>\n        </Grid>\n      </Grid>\n      <div id=\"energymap\"></div>\n    </div>)\n  }\n}\n\nexport default USMap\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { observer } from \"mobx-react\"\nimport TrackerStore from '../../stores/TrackerStore'\n\n// import Button from '@material-ui/core/Button';\n\n// handleClose={(enableCounterfactual) => {\n//   this.setState({counterfactualAlert: false, counterfactualMode: enableCounterfactual})\n//   if (enableCounterfactual == false) {\n//     this.setState({initialComponents: JSON.parse(JSON.stringify(this.startComponents))})\n//     // fetch(SERVER_URI + \"pause?\" + new URLSearchParams({status: \"false\"}))\n//     //   .then((response) => response.json())\n//     //   .then((data) => {\n//     //   })\n//   } else {\n//     // fetch(SERVER_URI + \"pause?\" + new URLSearchParams({status: \"true\"}))\n//     //   .then((response) => response.json())\n//     //   .then((data) => {\n//     //   })\n//   }\n// }}\n\nexport default observer(() => {\n  return (\n    <div>\n      <Dialog\n        open={TrackerStore.counterfactualAlert}\n        onClose={() => { TrackerStore.resetTracker() }}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Entering 'What-If' Mode\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You're trying to explore an alternative! This will change your carbon output and your projections.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { TrackerStore.resetTracker() }} color=\"primary\">\n            No, don't do that\n          </Button>\n          <Button onClick={() => { TrackerStore.enterAlternativeMode() }} color=\"primary\">\n            Yes, explore alternatives\n          </Button>\n        </DialogActions>\n      </Dialog>\n      { TrackerStore.counterfactualMode && <Alert\n        style={{marginTop: '-8px', marginBottom: '5px'}}\n        severity=\"info\"\n        action={\n          <Button onClick={() => { TrackerStore.resetTracker() }} variant=\"contained\" color=\"primary\">\n            Reset\n          </Button>\n        }\n      > \n        You're currently exploring alternatives! Click reset to reset alternatives with default values.\n      </Alert> }\n    </div>\n  );\n})","import React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport MemoryIcon from '@material-ui/icons/Memory';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToysIcon from '@material-ui/icons/Toys';\nimport Typography from '@material-ui/core/Typography';\n\nclass HardwareItem extends React.Component {\n    render () {\n        return (\n            <ListItem>\n                <ListItemAvatar>\n                <Avatar>\n                    {this.props.hardwareType == \"CPU\" && <MemoryIcon />}\n                    {this.props.hardwareType == \"GPU\" && <LayersIcon />}\n                </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={this.props.hardwareType + \" - \" + this.props.hardwareName}\n                    secondary={<React.Fragment>\n                        {this.props.original &&\n                            <Typography\n                                component=\"span\"\n                                variant=\"caption\"\n                                color=\"textPrimary\"\n                            >\n                            {\"Quantity: \" + this.props.original }\n                            </Typography>\n                        }\n                        {this.props.original && <br />}\n                        { Number.isFinite(this.props.quantity) && this.props.quantity != this.props.original && <Typography\n                          component=\"span\"\n                          variant=\"caption\"\n                          style={{color: '#f5b042', fontWeight: 'bold'}}\n                        >\n                          {\"Alternative: \" + this.props.quantity}\n                        </Typography> }\n                      </React.Fragment>}\n                />\n                <ListItemSecondaryAction>\n                <IconButton onClick={() => { this.props.updateQuantityHandler(this.props.quantity + 1) }} edge=\"end\" aria-label=\"add\">\n                    <AddIcon />\n                </IconButton>\n                <IconButton\n                    onClick={() => {\n                        this.props.updateQuantityHandler(this.props.quantity > 0 ? this.props.quantity - 1 : this.props.quantity)\n                    }} edge=\"end\" aria-label=\"remove\">\n                    <RemoveIcon />\n                </IconButton>\n                {/* <IconButton edge=\"end\" aria-label=\"delete\">\n                    <DeleteIcon />\n                </IconButton> */}\n                </ListItemSecondaryAction>\n            </ListItem>\n        )\n    }\n}\n\nexport default HardwareItem\n","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport efficiencyMap from './efficiency.json'\nimport TrackerStore from '../../stores/TrackerStore'\n\nexport default function HardwareAutoComplete() {\n  const [value, setValue] = React.useState(\"\");\n  return (\n    <Grid container>\n\n        <Grid item xs={9}>\n\n          <Autocomplete\n            id=\"highlights-demo\"\n            options={top100Films}\n            style={{paddingLeft: '16px', paddingRight: '16px', paddingTop: '0px'}}\n            onChange={(event, value) => setValue(value)} // prints the selected value\n            getOptionLabel={(option) => option.title}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Hardware\" variant=\"outlined\" margin=\"normal\" />\n            )}\n            renderOption={(option, { inputValue }) => {\n              const matches = match(option.title, inputValue);\n              const parts = parse(option.title, matches);\n\n              return (\n                <div>\n                  {parts.map((part, index) => (\n                    <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                      {part.text}\n                    </span>\n                  ))}\n                </div>\n              );\n            }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n\n          <Button onClick={() => {\n            TrackerStore.addHardware(\"gpu\", value.title)\n          }} color=\"primary\" style={{marginTop: \"16px\",width: \"90%\", height: \"68.5%\"}} variant=\"contained\">Add</Button>\n\n        </Grid>\n    </Grid>\n    // <div>\n\n    // </div>\n\n\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n\nconst top100Films  = Object.keys(efficiencyMap).map((curr) => {\n  return {title: curr}\n})\n\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport HardwareItem from './HardwareItem'\nimport HardwareAutoComplete from './HardwareAutoComplete'\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nimport { observer } from \"mobx-react\"\nimport TrackerStore from '../../stores/TrackerStore'\n\nfunction union(setA, setB) {\n  let _union = new Set(setA)\n  for (let elem of setB) {\n      _union.add(elem)\n  }\n  return _union\n}\n\n// TODO: better way to do this...\nconst jointMap = (original, alternative) => {\n  const joint = {}\n  const originalKeys = new Set(Object.keys(original))\n  const alternativeKeys = new Set(Object.keys(alternative))\n  const allKeys = union(originalKeys, alternativeKeys)\n  for (var k of allKeys) {\n    joint[k] = {original: original[k], alternative: alternative[k]}\n  }\n  return joint\n}\n\n\n@observer\nclass HardwareView extends React.PureComponent {\n  render () {\n    let cpuMap = {}\n    let gpuMap = {}\n\n    if (TrackerStore.initialComponents) {\n      cpuMap = jointMap(TrackerStore.startComponents[\"cpu\"], TrackerStore.initialComponents[\"cpu\"]);\n      gpuMap = jointMap(TrackerStore.startComponents[\"gpu\"], TrackerStore.initialComponents[\"gpu\"]);\n    }\n\n    return (<div>\n      <Typography style={{paddingTop: '2%', paddingLeft: '16px'}} variant=\"h6\" gutterBottom>\n          Your Hardware\n      </Typography>\n\n      <Divider variant=\"middle\" />\n      <List dense={true}>\n        {TrackerStore.initialComponents &&\n          Object.keys(cpuMap).map((component, i) =>\n          <HardwareItem\n          hardwareType={\"CPU\"}\n          key={i}\n          hardwareName={component}\n          quantity={cpuMap[component].alternative}\n          original={cpuMap[component].original}\n          updateQuantityHandler={(val) => {\n            // props.updateQuantityHandler(\"cpu\", component, val)\n            TrackerStore.updateHardware(\"cpu\", component, val)\n          }}\n          />\n        )}\n\n        {TrackerStore.initialComponents &&\n          Object.keys(gpuMap).map((component, i) =>\n          <HardwareItem\n          hardwareType={\"GPU\"}\n          key={i}\n          hardwareName={component}\n          quantity={gpuMap[component].alternative}\n          original={gpuMap[component].original}\n          updateQuantityHandler={(val) => {\n            TrackerStore.updateHardware(\"gpu\", component, val)\n          }}\n          />\n        )}\n      </List>\n      <Typography style={{paddingLeft: '16px'}} variant=\"h6\" gutterBottom>\n          Add Alternative Hardware\n      </Typography>\n      <Divider variant=\"middle\" />\n      <div style={{paddingBottom: '1%'}}><HardwareAutoComplete /></div>\n    </div>)\n  }\n}\n\nexport default HardwareView\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport 'katex/dist/katex.min.css';\nimport { InlineMath, BlockMath } from 'react-katex';\n\nimport { observer } from \"mobx-react\"\nimport TrackerStore from '../../stores/TrackerStore'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport NRELData from '../../NRELData.json'\n\nconst upDownStyles = {\n  display: \"inline-block\",\n  fontSize: \"6px\",\n  lineHeight: \"6px\",\n  verticalAlign: \"middle\",\n  paddingLeft: '3.5px'\n}\n\nconst colors = [\"#7200ac\", \"#2db15d\", \"#fb001d\", \"#126ed5\", \"#ffa06d\", \"#db4e9e\", \"#00A5CF\", \"#926C4F\", \"#596157\"]\n/*global katex*/\n\n@observer\nclass ExplainableEquation extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      \"eq1\": false,\n      \"eq2\": false,\n      \"eq3\": false\n    }\n  }\n\n  handleClick (key) {\n    this.setState({ [key]: !this.state[key] })\n  }\n\n  render() {\n    return (\n      <div>\n        <Typography style={{paddingLeft: '16px', paddingTop: '1%'}} variant=\"h6\" gutterBottom>\n          How Your CO<sub>2</sub> Emissions are Calculated\n        </Typography>\n        <Divider variant=\"middle\" />\n\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          style={{width: '100%'}}\n        >\n        <ListItem button onClick={() => this.handleClick(\"eq3\")}>\n            <ListItemText>\n              CO<sub>2</sub> Emissions\n            </ListItemText>\n            <ListItemText>\n              <BlockMath>{String.raw`\\textcolor{${colors[1]}}{\\mathrm{CO}_{2} \\mathrm{e}}= \\textcolor{${colors[4]}}{${NRELData[(TrackerStore.hoveredState || TrackerStore.initialState)][\"co2_lb_kwh\"].toFixed(2)}} \\cdot \\textcolor{${colors[5]}}{\\overline{p_{epoch}}}`}</BlockMath>\n            </ListItemText>\n            {this.state[\"eq3\"] ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={this.state[\"eq3\"]} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem>\n                <ListItemText>\n                <Typography style={{paddingBottom: '2%'}} variant=\"body1\">\n                  To convert to <span style={{fontWeight: 600, color: colors[1]}}>CO<sub>2</sub> emissions</span>, in pounds, we multiply the\n                  <span style={{fontWeight: 600, color: colors[4]}}> state-wide coefficient for lb of CO<sub>2</sub></span> produced per kilowatt hour consumed (from NREL) by \n                  the <span style={{fontWeight: 600, color: colors[5]}}>power consumed during an epoch p<sub>epoch</sub></span>. \n                </Typography>\n                </ListItemText>\n              </ListItem>\n            </List>\n          </Collapse>\n          <ListItem button onClick={() => this.handleClick(\"eq2\")}>\n            {/* <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon> */}\n            <ListItemText>\n              Epoch Power Consumption\n            </ListItemText>\n            <ListItemText>\n              <BlockMath>{String.raw`\\textcolor{${colors[5]}}{\\overline{p_{epoch}}} = \\frac{\\textcolor{${colors[7]}}{\\sum_{i=1}^{I}} \\textcolor{${colors[0]}}{p_{i}}}{\\textcolor{${colors[7]}}{I}} \\cdot \\frac{t_{epoch}}{1000}`}</BlockMath>\n            </ListItemText>\n            {this.state[\"eq2\"] ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={this.state[\"eq2\"]} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem>\n                <ListItemText>\n                <Typography variant=\"body1\">\n                  To find the <span style={{fontWeight: 600, color: colors[5]}}>power consumed over an epoch p<sub>epoch</sub></span> in kilowatt hours, \n                  we take the <span style={{fontWeight: 600, color: colors[7]}}>average of all</span> your <span style={{fontWeight: 600, color: colors[0]}}>total instantaneous power usages p<sub>i</sub> </span> \n                  during this epoch, multiply by the <span style={{fontWeight: 600}}>duration of the epoch in hours t<sub>epoch</sub></span>, and divide by <span style={{fontWeight: 600}}>1000</span>.\n                </Typography>\n                </ListItemText>\n              </ListItem>\n            </List>\n          </Collapse>\n          <ListItem button onClick={() => this.handleClick(\"eq1\")}>\n          <ListItemText>\n              Total Instantaneous Power\n            </ListItemText>\n            <ListItemText>\n              <BlockMath>{String.raw`\\textcolor{${colors[0]}}{p_{i}} = (\\textcolor{${colors[3]}}{p_{chipset}} + \\textcolor{${colors[2]}}{\\sum_{g=1}^{G} p_{g}} \\thinspace ) \\cdot \\textcolor{${colors[6]}}{${TrackerStore.initialPUE.toFixed(2)}} \\hspace{3pt}`}</BlockMath>\n            </ListItemText>\n            {this.state[\"eq1\"] ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={this.state[\"eq1\"]} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem>\n                <ListItemText>\n                  <Typography variant=\"body1\">\n                    {/* First, we take measurements of <span style={{fontWeight: 600, color: colors[0]}}>instantaneous power usage</span>, in watts, from our hardware at a fixed interval (10s).\n                    <span style={{fontWeight: 600, color: colors[0]}}> These measurments</span> are the sum of of our <span style={{fontWeight: 600, color: colors[3]}}>chipset (CPU and DRAM)</span> and <span style={{fontWeight: 600, color: colors[2]}}>our graphics card</span> instantaneous power usages.\n                    Then, we multiply by a <span style={{fontWeight: 600, color: colors[6]}}>PUE coefficient</span>: this factor adjusts for electricity used by other infrastructure, like cooling and lighting at a datacenter.\n                    We use a <span style={{fontWeight: 600, color: colors[6]}}>default value of 1.59</span> from The Uptime Institute Annual Data Center Survey (Ascierto, 2020). */}\n\n                    Every 10 seconds, the <span style={{fontWeight: 600, color: colors[0]}}>total instantaneous power usage p<sub>i</sub></span>, in watts, is computed as the sum of those of your \n                    <span style={{fontWeight: 600, color: colors[3]}}> chipset p<sub>chipset</sub></span> (CPU and DRAM) and <span style={{fontWeight: 600, color: colors[2]}}>graphics cards p<sub>g</sub></span>, multiplied by <span style={{fontWeight: 600, color: colors[6]}}>a PUE coefficient \n                    (default value at<div style={upDownStyles}>\n                      <IconButton \n                      onClick={() => {\n                        TrackerStore.setPUE(TrackerStore.initialPUE + .01)\n                      }}\n                      style={{padding: '0', width: '12px', height: '12px'}}>\n                        <ArrowDropUpIcon  />\n                      </IconButton>\n                      <br />\n                      <IconButton onClick={() => {\n                          TrackerStore.setPUE(TrackerStore.initialPUE - .01)\n                        }} \n                        style={{padding: '0', width: '12px', height: '12px'}} >\n                        <ArrowDropDownIcon />\n                      </IconButton>\n                      </div> <u contentEditable=\"true\">{TrackerStore.initialPUE.toFixed(2)}</u> [Ascierto 2020])</span> that adjusts for electricity used by other resources like cooling and lighting.\n\n                  </Typography>\n                </ListItemText>\n              </ListItem>\n            </List>\n          </Collapse>\n        </List>\n      </div>\n    );    \n  }\n\n}\n\nexport default ExplainableEquation;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport Button from '@material-ui/core/Button';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport TextField from '@material-ui/core/TextField';\n\nimport { observer } from \"mobx-react\"\nimport TrackerStore from '../../stores/TrackerStore'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst StyledToggleButtonGroup = withStyles((theme) => ({\n  grouped: {\n    margin: '8px',\n    '&:not(:first-child)': {\n      borderRadius: theme.shape.borderRadius,\n    },\n    '&:first-child': {\n      borderRadius: theme.shape.borderRadius,\n    }\n  }\n}))(ToggleButtonGroup);\n\nconst getButtonStyling = (idx, alternativeIdx, modelIdx) => {\n  const styling = {\n    textTransform: 'none', display: 'block', textAlign: 'center',\n    // color: idx == modelIdx ? 'white' : '#673ab7',\n    color: '#673ab7',\n    backgroundColor: idx == modelIdx ? '#eadeff' : 'white',\n    border: idx == alternativeIdx ? '2px dashed rgb(245, 176, 66)' : '1px solid #673ab7',\n    '&:hover': {\n      color: 'green'\n    }\n  }\n  return styling\n}\n\n@observer\nclass DataSourceView extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleChange(event, nextView) {\n    TrackerStore.setTrackerMode(nextView)\n  };\n\n  render() {\n    return (\n\n      <Grid style={{paddingLeft: '12px', width: 'calc(100% + 8px)'}} justify=\"space-between\" container spacing={2}>\n        <Grid item style={{paddingBottom: '1px'}} xs={12}>\n          <span style={{color: '#3b444b'}}>Energy Profiles</span>\n        </Grid>\n        <Grid xs={8} item style={{padding: '0px'}}>\n\n        {TrackerStore.dataMode != 'link' && <StyledToggleButtonGroup\n          size=\"small\"\n          value={TrackerStore.modelIdx}\n          exclusive\n          onChange={(event, newPaper) => { TrackerStore.setModelSource(newPaper) }}\n          aria-label=\"text alignment\"\n        >\n        {TrackerStore.dataMode != 'link' && TrackerStore.modelData.map((value, idx) => (\n\n          <ToggleButton style={getButtonStyling(idx, TrackerStore.alternativeModelIdx, TrackerStore.modelIdx)}\n              onContextMenu={(e) => {\n                if (e.type === 'contextmenu') {\n                  e.preventDefault();\n                  TrackerStore.setAlternativeModel(idx)\n                }\n              }}\n              value={idx}>\n            {/* <Typography style={{fontSize: 14}} color=\"textSecondary\" gutterBottom>\n              { value.author }\n            </Typography> */}\n            <Typography variant=\"h5\" component=\"h2\">\n              { value.name }\n            </Typography>\n          </ToggleButton>\n        ))}\n        </StyledToggleButtonGroup> }\n\n        { TrackerStore.dataMode == 'link' &&\n          <Grid container>\n            <Grid item style={{marginRight: '8px', marginTop: '8px', marginLeft: '8px'}} xs={7}>\n              <TextField\n                style={{width: '100%'}}\n                id=\"outlined-helperText\"\n                label=\"Enter Live Energy Profile URL\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                style={{height: 'calc(100% - 8px)', marginTop: '8px'}}\n                startIcon={<GetAppIcon />}\n              >\n                Export\n              </Button>\n            </Grid>\n          </Grid>\n        }\n\n        { TrackerStore.dataMode != 'link' &&\n          <div style={{display: 'inline'}}>\n            <input\n              accept=\".json\"\n              style={{ display: 'none' }}\n              id=\"raised-button-file\"\n              type=\"file\"\n              onChange={(e) => {\n                const fileReader = new FileReader();\n                fileReader.readAsText(e.target.files[0], \"UTF-8\");\n                fileReader.onload = e => {\n                  var loadedProfile = JSON.parse(e.target.result);\n                  TrackerStore.addModelProfile(loadedProfile);\n                };\n              }}\n            />\n            <label htmlFor=\"raised-button-file\">\n              <Button variant=\"raised\"\n              style={{height: \"calc(100% - 16px)\", marginBottom: '8px'}}\n              startIcon={<PublishIcon />}\n              variant=\"outlined\"\n              color=\"primary\"\n              component=\"span\">\n                Import\n              </Button>\n            </label>\n          </div>\n        }\n\n\n        </Grid>\n\n        <Grid item>\n          <ToggleButtonGroup style={{backgroundColor: 'white'}} value={TrackerStore.dataMode} exclusive onChange={this.handleChange.bind(this)}>\n            <ToggleButton value=\"link\" aria-label=\"module\">\n              <LinkIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n      </Grid>\n    );\n  }\n\n}\n\nexport default DataSourceView;\n","function union(setA, setB) {\n    let _union = new Set(setA)\n    for (let elem of setB) {\n        _union.add(elem)\n    }\n    return _union\n  }\n\n// TODO: better way to do this...\nconst jointMap = (original, alternative) => {\n  const joint = {}\n  const originalKeys = new Set(Object.keys(original))\n  const alternativeKeys = new Set(Object.keys(alternative))\n  const allKeys = union(originalKeys, alternativeKeys)\n  for (var k of allKeys) {\n    joint[k] = {original: original[k], alternative: alternative[k]}\n  }\n  return joint\n}\n\nexport {jointMap, union}\n","\n/*global d3*/\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { SERVER_URI, MODEL_DATA } from '../../consts/consts'\nimport { jointMap } from \"../../utils/jointMap\"\nimport efficiencyMap from '../HardwareComponents/efficiency.json'\n\nimport NRELData from '../../NRELData.json'\n\nimport { linearRegression } from '../../utils/regression'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport OfflineBoltOutlinedIcon from '@material-ui/icons/OfflineBoltOutlined';\nimport PublicOutlinedIcon from '@material-ui/icons/PublicOutlined';\nimport Fade from '@material-ui/core/Fade';\nimport Popper from '@material-ui/core/Popper';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport { observer } from \"mobx-react\"\nimport TrackerStore from '../../stores/TrackerStore'\n\nconst upDownStyles = {\n  display: \"inline-block\",\n  fontSize: \"6px\",\n  lineHeight: \"6px\",\n  verticalAlign: \"middle\",\n  paddingLeft: '3.5px'\n}\n\nconst labelGenerator = (length, interval) => {\n  const arr = []\n  for (var i = 0; i < length; i++) {\n    arr.push(i * interval)\n  }\n  return arr;\n}\n\n// TODO: Move a lot of this to another utils.js file, import from there.\n\nconst co2Converter = (PUE, co2Factor, graphType) => graphType == 0 ? (kwh) => kwh * PUE * co2Factor : x => x;\nconst cumulativeMap = (start, cumulative) => cumulative ? (sum => value => sum += value)(start) : x => x\nconst harmonicMean = (ns) => ns.length / ns.reduce((invSum, n) => (invSum + (1 / n)), 0)\n\n\nconst sumDatasetEnergy = (serverData, graphKey, cumulative, gpuRescale) => {\n  let mappedCpu = serverData[\"cpu\"][graphKey]\n    .map(cumulativeMap(0, cumulative))\n\n  let mappedGpu = serverData[\"gpu\"][graphKey]\n    .map((curr) => curr * gpuRescale)\n    .map(cumulativeMap(0, cumulative))\n\n  return mappedGpu.map((num, idx) => num + mappedCpu[idx])\n}\n\n\nconst extrapolator = (data, extrapolation) => {\n  let regression = linearRegression(data)\n  var extrapolated_data = []\n\n\n  for (var i = 0; i < data.length - 1; i++) {\n    extrapolated_data.push(null)\n  }\n\n  for (var i = data.length - 1; i < data.length + extrapolation; i++) {\n    extrapolated_data.push(regression[\"slope\"] * i + regression[\"intercept\"])\n  }\n\n  return extrapolated_data\n}\n\nconst getDataScaffold = (modelIdx, alternativeIdx, graphType, intervalType,\n                        PUE, hoveredState, cumulative, extrapolation, gpuRescale, dataMode) => {\n\n  const emptyGraph =  {\"data\": {}, \"options\": {}}\n  if (!Number.isFinite(modelIdx) && dataMode != \"link\") return emptyGraph;\n  const serverData = dataMode == \"link\" ? TrackerStore.liveData : TrackerStore.modelData[modelIdx].serverData;\n  if (!serverData) return emptyGraph;\n  if (!extrapolation) extrapolation = 0;\n\n  const originalCo2Converter =\n    co2Converter(TrackerStore.startPUE, NRELData[TrackerStore.initialState][\"co2_lb_kwh\"], graphType)\n\n  const plotAlternatives = hoveredState || Number.isFinite(alternativeIdx) || TrackerStore.counterfactualMode;\n\n  const alternativeConverter =\n    plotAlternatives && co2Converter(PUE || TrackerStore.startPUE, NRELData[TrackerStore.hoveredState || TrackerStore.initialState][\"co2_lb_kwh\"], graphType)\n\n  const graphKey = intervalType == 0 ? \"interval\" : \"epoch\"\n  let labels = labelGenerator(serverData[\"cpu\"][graphKey].length + extrapolation, graphKey == \"epoch\" ? 1 : 10);\n\n  let originalSummedEnergy = sumDatasetEnergy(serverData, graphKey, cumulative, 1);\n\n  let alternativeSummedEnergy = Number.isFinite(alternativeIdx) ?\n    sumDatasetEnergy(TrackerStore.modelData[alternativeIdx].serverData, graphKey, cumulative, gpuRescale) : sumDatasetEnergy(serverData, graphKey, cumulative, gpuRescale);\n\n\n  let datasets = [\n    {\n      label: (graphType == 0 ? 'Carbon Emissions (CO2 lbs)' : 'Electricity (kWH)'),\n      data: originalSummedEnergy.map(originalCo2Converter),\n      fill: false,\n      backgroundColor: graphType == 0 ? 'rgb(45, 177, 93)' : 'rgb(255, 99, 132)',\n      borderColor: graphType == 0 ? 'rgba(45, 177, 93, 0.5)' : 'rgba(255, 99, 132, 0.5)',\n      pointRadius: 1.5,\n      yAxisID: 'y-axis-1',\n    },\n  ]\n\n  if (plotAlternatives) {\n    datasets.push(\n      {\n        label: 'Alternative Consumption',\n        data: alternativeSummedEnergy.map(alternativeConverter),\n        fill: false,\n        backgroundColor: 'rgb(245, 176, 66)',\n        borderColor: 'rgba(245, 176, 66, 0.5)',\n        pointRadius: 1.5,\n        yAxisID: 'y-axis-1',\n      }\n    )\n  }\n\n  if (extrapolation) {\n    datasets.push(\n      {\n        label: 'Extrapolated Consumption',\n        data: extrapolator(originalSummedEnergy.map(originalCo2Converter), extrapolation),\n        borderDash: [10,5],\n        fill: false,\n        backgroundColor: graphType == 0 ? 'rgb(45, 177, 93)' : 'rgb(255, 99, 132)',\n        borderColor: graphType == 0 ? 'rgba(45, 177, 93, 0.5)' : 'rgba(255, 99, 132, 0.5)',\n        pointRadius: 1.5,\n        yAxisID: 'y-axis-1',\n      }\n    )\n\n\n    if (plotAlternatives) {\n      datasets.push(\n        {\n          label: 'Extrapolated Alternative Consumption',\n          data: extrapolator(alternativeSummedEnergy.map(alternativeConverter), extrapolation),\n          borderDash: [10,5],\n          fill: false,\n          backgroundColor: 'rgb(245, 176, 66)',\n          borderColor: 'rgba(245, 176, 66, 0.5)',\n          pointRadius: 1.5,\n          yAxisID: 'y-axis-1',\n        }\n      )\n    }\n  }\n\n  const data = {\n    labels,\n    datasets\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-1',\n          scaleLabel: {\n            display: true,\n            labelString: graphType == 0 ? 'Carbon Emissions (CO2 lbs)' : 'Kilowatt Hours (kWH)',\n            fontSize: 16\n          }\n        },\n      ],\n      xAxes: [\n        {\n          display: true,\n          id: 'x-axis-1',\n          scaleLabel: {\n            display: false,\n            labelString: intervalType == 0 ? 'Interval (seconds)' : 'Epoch',\n            fontSize: 16\n          },\n        },\n      ]\n    },\n    legend: {\n      labels: {\n        filter: function(item, chart) {\n          // Logic to remove a particular legend item goes here\n          return !item.text.includes('Extrapolated');\n        },\n        fontSize: 16\n      }\n    }\n  }\n\n  return {options, data}\n}\n\n@observer\nclass SampleGraph extends React.PureComponent {\n\n  constructor(props) {\n    super();\n    this.state = {\n      serverData: null,\n      graphType: 0,\n      intervalType: 1,\n      sliderMax: 20,\n      sliderVal: 0,\n      cumulative: true,\n      open: false,\n      anchorEl: null,\n      placement: ''\n    };\n    this.updateInterval = null;\n  }\n\n  fetchGraphData = () => {\n\n    if (TrackerStore.dataMode == \"link\") {\n      fetch(SERVER_URI + \"energy-stats\").then((response) => response.json())\n        .then((data) => {\n          TrackerStore.updateLiveData(data);\n          setTimeout(this.fetchGraphData, 5000);\n        })\n        .catch(() => {\n          setTimeout(this.fetchGraphData, 5000);\n        })\n    } else setTimeout(this.fetchGraphData, 5000);\n\n  }\n\n  componentDidMount() {\n    this.updateInterval = this.fetchGraphData();\n  }\n\n  componentWillUnmount() {\n    if (this.updateInterval) clearInterval(this.updateInterval);\n  }\n\n  handleGraphChange = (event, value) => {\n    if (value != null) this.setState({graphType: value})\n  }\n\n  handleIntervalChange = (event, value) => {\n    if (value != null) this.setState({intervalType: value})\n  }\n\n  handleCumulativeSwitch = (event) => {\n    this.setState({cumulative: event.target.checked})\n  }\n\n  handleClick = (newPlacement) => (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: !this.state.open,\n      placement: newPlacement\n    })\n  };\n\n  render() {\n\n    let gpuMap = {}\n\n    if (TrackerStore.initialComponents) {\n      gpuMap = jointMap(TrackerStore.startComponents[\"gpu\"], TrackerStore.initialComponents[\"gpu\"]);\n    }\n\n    const originals = []\n    const alternatives = []\n    Object.keys(gpuMap).forEach((curr) => {\n      const componentObj = gpuMap[curr]\n      if (Number.isFinite(componentObj.original)) {\n        for (let i = 0; i < componentObj.original; i++) originals.push(efficiencyMap[curr]);\n      }\n      for (let i = 0; i < componentObj.alternative; i++) alternatives.push(efficiencyMap[curr]);\n\n    })\n\n    const gpuRescale = harmonicMean(originals) / harmonicMean(alternatives)\n\n    const dataScaffold = getDataScaffold(TrackerStore.modelIdx, TrackerStore.alternativeModelIdx,\n      this.state.graphType, this.state.intervalType, TrackerStore.initialPUE,\n      TrackerStore.hoveredState,\n      this.state.cumulative, this.state.sliderVal, gpuRescale, TrackerStore.dataMode)\n\n    return (\n      <div>\n          <Popper open={this.state.open} anchorEl={this.state.anchorEl} placement={this.state.placement} transition>\n            {({ TransitionProps }) => (\n              <Fade {...TransitionProps} timeout={350}>\n                <Paper>\n                  <Typography style={{paddingTop: '2%', paddingLeft: '16px'}} variant=\"body1\">\n                    Settings\n                  </Typography>\n                  <Divider variant=\"middle\" />\n                  <div style={{paddingLeft: '16px', paddingTop: '3px', paddingRight: '16px'}}>\n                  <Grid item sm={12}>\n                  <div>\n                    <FormLabel style={{paddingBottom: '1.5%'}} component=\"legend\">Measuring Unit (Y-Axis)</FormLabel>\n                    <ToggleButtonGroup\n                      value={this.state.graphType}\n                      exclusive\n                      onChange={this.handleGraphChange}\n                      size=\"small\"\n                    >\n                      <ToggleButton style={{textTransform: \"none\"}} value={0}>\n                        <PublicOutlinedIcon />\n                        <span style={{paddingLeft: '.2em'}}>Carbon (CO<sub>2</sub>)</span>\n                      </ToggleButton>\n                      <ToggleButton style={{textTransform: \"none\"}} value={1}>\n                        <OfflineBoltOutlinedIcon />\n                        <span style={{paddingLeft: '.2em'}}>Electricity (kWH)</span>\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  </div>\n                </Grid>\n\n                <Grid style={{paddingTop: '4%'}} item sm={12}>\n                  <div>\n                    <FormLabel style={{paddingBottom: '0%'}} component=\"legend\">Cumulative Consumption</FormLabel>\n                    <Grid component=\"label\" container alignItems=\"center\">\n                      <Grid item>Off</Grid>\n                      <Grid item>\n                        <Switch checked={this.state.cumulative} onChange={this.handleCumulativeSwitch} name=\"checkedC\" />\n                      </Grid>\n                      <Grid item>On</Grid>\n                    </Grid>\n                  </div>\n\n                </Grid>\n                </div>\n                </Paper>\n              </Fade>\n            )}\n          </Popper>\n          <Grid container>\n            <Grid item sm={11}>\n              <Typography style={{paddingTop: '2%', paddingLeft: '16px'}} variant=\"h6\" gutterBottom>\n                Your Model’s {this.state.graphType == 0 ? <span>CO<sub>2</sub> Emissions (CO<sub>2</sub> lbs)</span> : <span>Enery Consumption (kWh)</span>}\n              </Typography>\n            </Grid>\n            <Grid item sm={1}>\n            <IconButton style={{float: \"right\", paddingRight: \"16px\"}} color=\"primary\" component=\"span\">\n              <SettingsIcon onClick={this.handleClick('bottom-end')} />\n            </IconButton>\n            </Grid>\n          </Grid>\n\n          <Divider variant=\"middle\" />\n\n          <div style={{marginTop: '2.5%', marginLeft: '2.5%', marginRight: '2.5%'}}>\n            <Line data={dataScaffold[\"data\"]} options={dataScaffold[\"options\"]}/>\n            <div style={{textAlign: 'center'}}>\n              <p style={{margin: 0, fontSize: '16px'}}>Epochs ({this.state.sliderVal}\n              <div style={upDownStyles}>\n              <IconButton\n              onClick={() => {this.setState({sliderVal: this.state.sliderVal + 10})}}\n              style={{padding: '0', width: '12px', height: '12px'}}>\n                <ArrowDropUpIcon  />\n              </IconButton>\n              <br />\n              <IconButton onClick={() => {\n                  if (this.state.sliderVal >= 10)\n                    this.setState({sliderVal: this.state.sliderVal - 10})\n                }}\n                style={{padding: '0', width: '12px', height: '12px'}} >\n                <ArrowDropDownIcon />\n              </IconButton>\n              </div> extrapolated)</p>\n            </div>\n\n          </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default SampleGraph\n\n","export function linearRegression(y) {\n  var lr = {};\n  var n = y.length;\n  var sum_x = 0;\n  var sum_y = 0;\n  var sum_xy = 0;\n  var sum_xx = 0;\n  var sum_yy = 0;\n\n  for (var i = 0; i < y.length; i++) {\n    sum_x += i;\n    sum_y += y[i];\n    sum_xy += (i*y[i]);\n    sum_xx += (i*i);\n    sum_yy += (y[i]*y[i]);\n  } \n\n  lr['slope'] = (n * sum_xy - sum_x * sum_y) / (n*sum_xx - sum_x * sum_x);\n  lr['intercept'] = (sum_y - lr.slope * sum_x)/n;\n  lr['r2'] = Math.pow((n*sum_xy - sum_x*sum_y)/Math.sqrt((n*sum_xx-sum_x*sum_x)*(n*sum_yy-sum_y*sum_y)),2);\n  return lr;\n}","import React from 'react';\nimport USMap from '../EnergyMap/USMap'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport CounterfactualAlert from '../CounterfactualAlert/CounterfactualAlert'\nimport HardwareView from  '../HardwareComponents/HardwareView'\nimport ExplainableEquation from  '../ExplainableEquation/ExplainableEquation'\nimport DataSourceView from '../DataSourceView/DataSourceView'\n\nimport SampleGraph from '../TrackerGraphs/SampleGraph'\nimport './TrackerPageStyles.css'\n\nclass TrackerPage extends React.Component {\n\n  constructor(props) {\n    super();    \n  }\n\n  render() {\n    const firstRowStyle = {height: \"500px\", marginTop: \"2%\", marginLeft: \"4px\", marginRight: '12px', marginBottom: '6px'}\n    return (\n      <div>\n\n        <CounterfactualAlert />\n        <DataSourceView />\n\n        <div className=\"split-container\">\n          <div id=\"col-1\">\n            <Paper style={{marginTop: \"2%\", marginLeft: \"12px\", marginRight: '4px', marginBottom: '2%'}}>\n            <Grid container>\n              <Grid item xs>\n                <SampleGraph />\n              </Grid>\n            </Grid>\n            <Grid container>\n              <Grid item xs>\n                <ExplainableEquation />\n              </Grid>\n            </Grid>\n            </Paper>\n          </div>\n\n          <div id=\"col-2\">\n            <Grid container>\n              <Grid item xs>\n                <Paper style={firstRowStyle}>\n                  <USMap />                  \n                </Paper>\n              </Grid>\n            </Grid>\n            <Grid container>\n              <Grid item xs>\n                <Paper style={{marginLeft: \"4px\", marginRight: '12px', marginBottom: '2%'}}>\n                  <HardwareView />\n                    {\n                    // updateQuantityHandler={(region, component, quantity) => {\n                    //   var copiedState = {...this.state.initialComponents}\n                    //   copiedState[region][component] = quantity\n                    //   if (!this.state.counterfactualMode) this.setState({counterfactualAlert: true});\n                    //   this.setState({initialComponents: copiedState})\n                    // }}\n                  }\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrackerPage","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TrackerPage from '../TrackerPage/TrackerPage'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nfunction TabPanel(props) {\n  const {children, value, index, classes, ...other} = props;\n\n  return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>\n\n            {children}\n\n          </div>\n        )}\n      </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function NavTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    if (!Number.isInteger(newValue)) return;\n    setValue(newValue);\n  };\n\n  // return (\n  //   <div className={classes.root}>\n  //     <AppBar style={{boxShadow: 'none', marginBottom: '8px'}} position=\"static\">\n  //       <Tabs\n  //         variant=\"fullWidth\"\n  //         value={value}\n  //         onChange={handleChange}\n  //         aria-label=\"nav tabs example\"\n  //       >\n  //         <LinkTab label=\"Tracker\" href=\"/tracker\" {...a11yProps(0)} />\n  //         <LinkTab label=\"Editor\" href=\"/editor\" {...a11yProps(1)} />\n  //         <LinkTab label=\"About\" href=\"/article\" {...a11yProps(2)} />\n  //         {/* <FormControlLabel\n  //           control={<Switch />}\n  //           label=\"Counterfactual Mode\"\n  //         /> */}\n  //       </Tabs>\n\n\n  //     </AppBar>\n  //     <TabPanel value={value} index={0}>\n  //         <TrackerPage />\n  //     </TabPanel>\n  //     <TabPanel value={value} index={1}>\n  //       {/* Editor */}\n  //     </TabPanel>\n  //     <TabPanel value={value} index={2}>\n  //       {/* About */}\n  //     </TabPanel>\n  //   </div>\n  // );\n  return (\n    <div className={classes.root}>\n      <AppBar style={{boxShadow: 'none', marginBottom: '8px'}} position=\"static\">\n        <Toolbar style={{paddingLeft: '12px', minHeight: '32px'}}>\n          <Typography style={{letterSpacing: '0', fontSize: '2rem', textTransform: 'none', lineHeight: '2.1', fontWeight: '900'}} variant=\"overline\">\n            EnergyVis <span style={{fontSize: '2rem', fontWeight: '200'}}>Interactive Energy Tracking for ML Models</span>\n          </Typography>\n          \n        </Toolbar>\n      </AppBar>\n      <TrackerPage />\n    </div>\n    \n  )\n}","import React from 'react';\nimport NavTabs from './components/NavTabs/NavTabs'\nimport './App.css';\n\nfunction App() {\n  return (\n    <NavTabs />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}